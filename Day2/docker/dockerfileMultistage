# --- Multistage build starts here ---
# Use Maven with Java 24 (Temurin) as the build environment
FROM maven:3.9.11-eclipse-temurin-24-noble AS stage1

# Set author label for image metadata
LABEL AUTHOR="VIGNAN"

# Set working directory inside the container
WORKDIR /opt

# Copy Maven build file and source code into the container
COPY pom.xml .

# Correct: Copies the src directory into /opt/src, preserving Maven structure. Using COPY src . would flatten the structure and break builds.
COPY src ./src

# Build the application and create a JAR file, skipping tests for faster build
 # This RUN command executes in a temporary container during the build stage
RUN mvn clean package -DskipTests

# Use a lightweight Java 21 runtime image for running the application

# --- Stage 2 starts here ---
FROM eclipse-temurin:21

# Copy the built JAR file from the build stage to the runtime image
COPY --from=stage1 /opt/target/gs-spring-boot-0.1.0.jar ./app.jar

# The EXPOSE instruction indicates the port number that the container listens on at runtime.
# Note: EXPOSE is for documentation and identification purposes only; it does not actually publish the port.
# Expose port 8090 for the application
EXPOSE 8090

# Set the default command to run the Spring Boot application
ENTRYPOINT ["java","-jar","app.jar"]
